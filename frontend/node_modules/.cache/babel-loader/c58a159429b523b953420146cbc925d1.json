{"ast":null,"code":"import { API } from \"../../backend\";\nexport const signup = user => {\n  return fetch(`${API}/signup`, {\n    method: \"POST\",\n    headers: {\n      Accept: \"application/json\",\n      \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify(user)\n  }).then(response => {\n    return response.json();\n  }).catch(err => {\n    console.log(err);\n  });\n};\nexport const signin = user => {\n  return fetch(`${API}/signin`, {\n    method: \"POST\",\n    headers: {\n      Accept: \"application/json\",\n      \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify(user)\n  }).then(response => {\n    return response.json();\n  }).catch(err => console.log(err));\n};\nexport const getUserDetail = userId => {\n  return fetch(`${API}/user/${userId}`, {\n    method: \"GET\"\n  }).then(response => {\n    return response.json();\n  }).catch(err => console.log(err));\n};\nexport const authenticate = (data, next) => {\n  if (typeof window !== \"undefined\") {\n    localStorage.setItem(\"jwt\", JSON.stringify(data));\n    next();\n  }\n};\nexport const signout = next => {\n  if (typeof window !== \"undefined\") {\n    localStorage.removeItem(\"jwt\");\n    return fetch(`${API}/signout`, {\n      method: \"GET\"\n    }).then(response => console.log(\"signout success\")).catch(err => console.log(err));\n  }\n};\nexport const isAuthenticated = () => {\n  if (typeof window == \"undefined\") {\n    return false;\n  }\n\n  if (localStorage.getItem(\"jwt\")) {\n    return JSON.parse(localStorage.getItem(\"jwt\"));\n  } else {\n    return false;\n  }\n};\nexport const updateRole = (userId, roleNum, token, next) => {\n  return fetch(`${API}/user/updaterole/${userId}`, {\n    method: \"PUT\",\n    headers: {\n      Accept: \"application/json\",\n      \"Content-Type\": \"application/json\",\n      Authorization: `Bearer ${token}`\n    },\n    body: JSON.stringify({\n      role: roleNum\n    })\n  }).then(response => {\n    return response.json();\n  }).catch(err => console.log(err));\n  next();\n};","map":{"version":3,"sources":["/Users/mac/Downloads/UpClone/frontend/src/auth/helper/index.js"],"names":["API","signup","user","fetch","method","headers","Accept","body","JSON","stringify","then","response","json","catch","err","console","log","signin","getUserDetail","userId","authenticate","data","next","window","localStorage","setItem","signout","removeItem","isAuthenticated","getItem","parse","updateRole","roleNum","token","Authorization","role"],"mappings":"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","sourcesContent":["import { API } from \"../../backend\";\n\nexport const signup = (user) => {\n    return fetch(`${API}/signup`, {\n        method: \"POST\",\n        headers:{\n            Accept:\"application/json\",\n            \"Content-Type\":\"application/json\"\n        },\n        body:JSON.stringify(user)\n    })\n    .then((response) => {\n        return response.json();\n    })\n    .catch((err) => {console.log(err)});\n};\n\nexport const signin = (user) => {\n    return fetch(`${API}/signin`, {\n        method:\"POST\",\n        headers:{\n            Accept:\"application/json\",\n            \"Content-Type\":\"application/json\",\n            \n        },\n        body:JSON.stringify(user)\n    })\n    .then(response => {\n        return response.json();\n    })\n    .catch((err) => console.log(err));\n};\n\nexport const getUserDetail = (userId) => {\n    return fetch(`${API}/user/${userId}`, {\n        method:\"GET\",\n    })\n    .then(response => {\n        return response.json();\n    })\n    .catch((err) => console.log(err));\n};\n\n\nexport const authenticate = (data,next) => {\n    if (typeof window !== \"undefined\") {\n        localStorage.setItem(\"jwt\", JSON.stringify(data));\n        next();\n    }\n};\n\nexport const signout = next => {\n    if (typeof window !== \"undefined\") {\n      localStorage.removeItem(\"jwt\");\n\n  \n      return fetch(`${API}/signout`, {\n        method: \"GET\"\n      })\n        .then(response => console.log(\"signout success\"))\n        .catch(err => console.log(err));\n    }\n  };\n\nexport const isAuthenticated = () => {\n    if (typeof window == \"undefined\") {\n      return false;\n    }\n    if (localStorage.getItem(\"jwt\")) {\n      return JSON.parse(localStorage.getItem(\"jwt\"));\n    } else {\n      return false;\n    }\n};\n\n\nexport const updateRole = (userId, roleNum, token, next) => {\n  return fetch(`${API}/user/updaterole/${userId}`, {\n      method:\"PUT\",\n      headers:{\n          Accept:\"application/json\",\n          \"Content-Type\":\"application/json\",\n          Authorization: `Bearer ${token}`\n      },\n    body:JSON.stringify({role:roleNum})\n  })\n  .then(response => {\n      return response.json();\n  })\n  .catch((err) => console.log(err));\n  next();\n};\n  "]},"metadata":{},"sourceType":"module"}