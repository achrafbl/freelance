{"ast":null,"code":"import { API } from \"../../backend\";\nexport const getAllJobs = () => {\n  return fetch(`${API}/jobs`, {\n    method: \"GET\"\n  }).then(response => {\n    return response.json();\n  }).catch(err => console.log(err));\n};\nexport const jobById = jobId => {\n  return fetch(`${API}/job/${jobId}`, {\n    method: \"GET\"\n  }).then(response => {\n    return response.json();\n  }).catch(err => {\n    console.log(err);\n  });\n};\nexport const newJob = (job, userId, token) => {\n  return fetch(`${API}/job/post/${userId}`, {\n    method: \"POST\",\n    headers: {\n      Accept: \"application/json\",\n      \"Content-Type\": \"application/json\",\n      Authorization: `Bearer ${token}`\n    },\n    body: JSON.stringify(job)\n  }).then(response => {\n    return response.json();\n  }).catch(err => {\n    console.log(err);\n  });\n};\nexport const myJobs = userId => {\n  return fetch(`${API}/myjobs/${userId}`, {\n    method: \"GET\",\n    headers: {\n      Accept: \"application/json\"\n    }\n  }).then(response => {\n    return response.json();\n  }).catch(err => {\n    console.log(err);\n  });\n};\nexport const updateJob = (job, jobId, token) => {\n  return fetch(`${API}/job/update/${jobId}`, {\n    method: \"PUT\",\n    headers: {\n      Accept: \"application/json\",\n      \"Content-Type\": \"application/json\",\n      Authorization: `Bearer ${token}`\n    },\n    body: JSON.stringify(job)\n  }).then(response => {\n    return response.json();\n  }).catch(err => {\n    console.log(err);\n  });\n};\nexport const deleteJob = (jobId, next) => {\n  return fetch(`${API}/job/delete/${jobId}`, {\n    method: \"DELETE\"\n  }).then(response => {\n    return response.json();\n  }).catch(err => console.log(err));\n};\nexport const addProposal = (userId, jobId) => {\n  return fetch(`${API}/proposals/${userId}/${jobId}`, {\n    method: \"PUT\"\n  }).then(response => {\n    return response.json();\n  }).catch(err => console.log(err));\n};","map":{"version":3,"sources":["/Users/mac/Downloads/UpClone/frontend/src/auth/helper/jobs.js"],"names":["API","getAllJobs","fetch","method","then","response","json","catch","err","console","log","jobById","jobId","newJob","job","userId","token","headers","Accept","Authorization","body","JSON","stringify","myJobs","updateJob","deleteJob","next","addProposal"],"mappings":"AAAA,SAASA,GAAT,QAAoB,eAApB;AAEA,OAAO,MAAMC,UAAU,GAAG,MAAM;AAC5B,SAAOC,KAAK,CAAE,GAAEF,GAAI,OAAR,EAAgB;AACxBG,IAAAA,MAAM,EAAC;AADiB,GAAhB,CAAL,CAGNC,IAHM,CAGDC,QAAQ,IAAI;AACd,WAAOA,QAAQ,CAACC,IAAT,EAAP;AACH,GALM,EAMNC,KANM,CAMCC,GAAD,IAASC,OAAO,CAACC,GAAR,CAAYF,GAAZ,CANT,CAAP;AAOH,CARM;AAUP,OAAO,MAAMG,OAAO,GAAIC,KAAD,IAAW;AAC9B,SAAOV,KAAK,CAAG,GAAEF,GAAI,QAAOY,KAAM,EAAtB,EAAyB;AACjCT,IAAAA,MAAM,EAAC;AAD0B,GAAzB,CAAL,CAGNC,IAHM,CAGAC,QAAD,IAAc;AAChB,WAAOA,QAAQ,CAACC,IAAT,EAAP;AACH,GALM,EAMNC,KANM,CAMCC,GAAD,IAAS;AAACC,IAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AAAiB,GAN3B,CAAP;AAOH,CARM;AAUP,OAAO,MAAMK,MAAM,GAAG,CAACC,GAAD,EAAMC,MAAN,EAAcC,KAAd,KAAwB;AAC1C,SAAOd,KAAK,CAAE,GAAEF,GAAI,aAAYe,MAAO,EAA3B,EAA8B;AACtCZ,IAAAA,MAAM,EAAE,MAD8B;AAEtCc,IAAAA,OAAO,EAAC;AACJC,MAAAA,MAAM,EAAC,kBADH;AAEJ,sBAAe,kBAFX;AAGJC,MAAAA,aAAa,EAAG,UAASH,KAAM;AAH3B,KAF8B;AAOtCI,IAAAA,IAAI,EAACC,IAAI,CAACC,SAAL,CAAeR,GAAf;AAPiC,GAA9B,CAAL,CASNV,IATM,CASAC,QAAD,IAAc;AAChB,WAAOA,QAAQ,CAACC,IAAT,EAAP;AACH,GAXM,EAYNC,KAZM,CAYCC,GAAD,IAAS;AAACC,IAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AAAiB,GAZ3B,CAAP;AAaH,CAdM;AAgBP,OAAO,MAAMe,MAAM,GAAIR,MAAD,IAAY;AAC9B,SAAOb,KAAK,CAAE,GAAEF,GAAI,WAAUe,MAAO,EAAzB,EAA4B;AACpCZ,IAAAA,MAAM,EAAE,KAD4B;AAEpCc,IAAAA,OAAO,EAAC;AACJC,MAAAA,MAAM,EAAC;AADH;AAF4B,GAA5B,CAAL,CAMNd,IANM,CAMAC,QAAD,IAAc;AAChB,WAAOA,QAAQ,CAACC,IAAT,EAAP;AACH,GARM,EASNC,KATM,CASCC,GAAD,IAAS;AAACC,IAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AAAiB,GAT3B,CAAP;AAUH,CAXM;AAcP,OAAO,MAAMgB,SAAS,GAAG,CAACV,GAAD,EAAMF,KAAN,EAAaI,KAAb,KAAuB;AAC5C,SAAOd,KAAK,CAAE,GAAEF,GAAI,eAAcY,KAAM,EAA5B,EAA+B;AACvCT,IAAAA,MAAM,EAAE,KAD+B;AAEvCc,IAAAA,OAAO,EAAC;AACJC,MAAAA,MAAM,EAAC,kBADH;AAEJ,sBAAe,kBAFX;AAGJC,MAAAA,aAAa,EAAG,UAASH,KAAM;AAH3B,KAF+B;AAOvCI,IAAAA,IAAI,EAACC,IAAI,CAACC,SAAL,CAAeR,GAAf;AAPkC,GAA/B,CAAL,CASNV,IATM,CASAC,QAAD,IAAc;AAChB,WAAOA,QAAQ,CAACC,IAAT,EAAP;AACH,GAXM,EAYNC,KAZM,CAYCC,GAAD,IAAS;AAACC,IAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AAAiB,GAZ3B,CAAP;AAaH,CAdM;AAgBP,OAAO,MAAMiB,SAAS,GAAG,CAACb,KAAD,EAAQc,IAAR,KAAiB;AACtC,SAAOxB,KAAK,CAAE,GAAEF,GAAI,eAAcY,KAAM,EAA5B,EAA+B;AACvCT,IAAAA,MAAM,EAAC;AADgC,GAA/B,CAAL,CAGNC,IAHM,CAGDC,QAAQ,IAAI;AACd,WAAOA,QAAQ,CAACC,IAAT,EAAP;AACH,GALM,EAMNC,KANM,CAMCC,GAAD,IAASC,OAAO,CAACC,GAAR,CAAYF,GAAZ,CANT,CAAP;AAOH,CARM;AAUP,OAAO,MAAMmB,WAAW,GAAG,CAACZ,MAAD,EAASH,KAAT,KAAkB;AACzC,SAAOV,KAAK,CAAE,GAAEF,GAAI,cAAae,MAAO,IAAGH,KAAM,EAArC,EAAwC;AAChDT,IAAAA,MAAM,EAAC;AADyC,GAAxC,CAAL,CAGNC,IAHM,CAGDC,QAAQ,IAAI;AACd,WAAOA,QAAQ,CAACC,IAAT,EAAP;AACH,GALM,EAMNC,KANM,CAMCC,GAAD,IAASC,OAAO,CAACC,GAAR,CAAYF,GAAZ,CANT,CAAP;AAOH,CARM","sourcesContent":["import { API } from \"../../backend\";\n\nexport const getAllJobs = () => {\n    return fetch(`${API}/jobs`, {\n        method:\"GET\",\n    })\n    .then(response => {\n        return response.json();\n    })\n    .catch((err) => console.log(err));\n};\n\nexport const jobById = (jobId) => {\n    return fetch (`${API}/job/${jobId}`, {\n        method:\"GET\"\n    })\n    .then((response) => {\n        return response.json();\n    })\n    .catch((err) => {console.log(err)});\n}\n\nexport const newJob = (job, userId, token) => {\n    return fetch(`${API}/job/post/${userId}`, {\n        method: \"POST\",\n        headers:{\n            Accept:\"application/json\",\n            \"Content-Type\":\"application/json\",\n            Authorization: `Bearer ${token}`   \n        },\n        body:JSON.stringify(job)\n    })\n    .then((response) => {\n        return response.json();\n    })\n    .catch((err) => {console.log(err)});\n};\n\nexport const myJobs = (userId) => {\n    return fetch(`${API}/myjobs/${userId}`, {\n        method: \"GET\",\n        headers:{\n            Accept:\"application/json\",\n        }\n    })\n    .then((response) => {\n        return response.json();\n    })\n    .catch((err) => {console.log(err)});\n};\n\n\nexport const updateJob = (job, jobId, token) => {\n    return fetch(`${API}/job/update/${jobId}`, {\n        method: \"PUT\",\n        headers:{\n            Accept:\"application/json\",\n            \"Content-Type\":\"application/json\",\n            Authorization: `Bearer ${token}`   \n        },\n        body:JSON.stringify(job)\n    })\n    .then((response) => {\n        return response.json();\n    })\n    .catch((err) => {console.log(err)});\n};\n\nexport const deleteJob = (jobId, next) => {\n    return fetch(`${API}/job/delete/${jobId}`, {\n        method:\"DELETE\",\n    })\n    .then(response => {\n        return response.json();\n    })\n    .catch((err) => console.log(err));\n};\n\nexport const addProposal = (userId, jobId) =>{\n    return fetch(`${API}/proposals/${userId}/${jobId}`, {\n        method:\"PUT\",\n    })\n    .then(response => {\n        return response.json();\n    })\n    .catch((err) => console.log(err));\n};"]},"metadata":{},"sourceType":"module"}