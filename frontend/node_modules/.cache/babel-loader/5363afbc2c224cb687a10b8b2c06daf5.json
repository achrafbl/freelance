{"ast":null,"code":"var _jsxFileName = \"/Users/mac/Downloads/UpClone/frontend/src/user/MyJobs.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport Menu from '../core/Menu';\nimport { myJobs, deleteJob } from '../auth/helper/jobs.js';\nimport { Link } from \"react-router-dom\";\nimport { Button, Container, Row, Col, Card } from 'react-bootstrap';\nimport { isAuthenticated } from \"../auth/helper/index\";\nimport Footer from \"../core/Footer\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst MyJob = () => {\n  _s();\n\n  const [jobs, setJobs] = useState([]);\n  const {\n    user\n  } = isAuthenticated();\n\n  const preload = () => {\n    myJobs(user._id).then(data => {\n      if (data.error) {\n        console.log(data.error);\n      } else {\n        setJobs(data);\n      }\n    });\n  };\n\n  const deleteThisJob = jobId => {\n    deleteJob(jobId).then(data => {\n      if (data.error) {\n        console.log(data.error);\n      } else {\n        preload();\n      }\n    });\n  };\n\n  useEffect(() => {\n    preload();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        backgroundColor: \"#1d4354\"\n      },\n      children: /*#__PURE__*/_jsxDEV(Menu, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(Container, {\n      style: {\n        fontSize: \"14px\",\n        margin: \"auto\",\n        marginTop: \"50px\",\n        height: \"100vh\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        style: {\n          fontWeight: \"900\",\n          paddingBottom: \"10px\",\n          textAlign: \"center\"\n        },\n        children: jobs.length > 0 ? \"Here's a List of all the Jobs You Uploaded\" : \"Sorry you created no job Make one!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"secondary\",\n        block: true,\n        children: /*#__PURE__*/_jsxDEV(Link, {\n          style: {\n            textDecoration: \"none\",\n            color: \"white\"\n          },\n          to: \"/add/job\",\n          children: \"Add New Job\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this), jobs.map((job, index) => {\n        return /*#__PURE__*/_jsxDEV(Col, {\n          style: {\n            marginTop: \"20px\"\n          },\n          children: /*#__PURE__*/_jsxDEV(Card, {\n            border: 'success',\n            children: [/*#__PURE__*/_jsxDEV(Card.Body, {\n              children: [/*#__PURE__*/_jsxDEV(Card.Header, {\n                style: {\n                  marginBottom: \"20px\"\n                },\n                children: /*#__PURE__*/_jsxDEV(\"h5\", {\n                  children: /*#__PURE__*/_jsxDEV(\"p\", {\n                    className: \"text-success\",\n                    children: job.title\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 58,\n                    columnNumber: 29\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 58,\n                  columnNumber: 25\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 57,\n                columnNumber: 25\n              }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n                children: [/*#__PURE__*/_jsxDEV(\"b\", {\n                  children: \"Description:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 61,\n                  columnNumber: 25\n                }, this), \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"text-success\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 61,\n                  columnNumber: 45\n                }, this), job.description]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 60,\n                columnNumber: 25\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 56,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(Card.Body, {\n              children: [/*#__PURE__*/_jsxDEV(Row, {\n                children: [/*#__PURE__*/_jsxDEV(Col, {\n                  children: [/*#__PURE__*/_jsxDEV(\"b\", {\n                    children: \"Type of Payment\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 66,\n                    columnNumber: 34\n                  }, this), \": \", /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"text-success\",\n                    children: job.typeOfPayment\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 66,\n                    columnNumber: 58\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 66,\n                  columnNumber: 29\n                }, this), /*#__PURE__*/_jsxDEV(Col, {\n                  children: [/*#__PURE__*/_jsxDEV(\"b\", {\n                    children: \"Price\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 67,\n                    columnNumber: 34\n                  }, this), \": \", /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"text-success\",\n                    children: [job.price, \" $\"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 67,\n                    columnNumber: 48\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 67,\n                  columnNumber: 29\n                }, this), /*#__PURE__*/_jsxDEV(Col, {\n                  children: [/*#__PURE__*/_jsxDEV(\"b\", {\n                    children: \"Experience Needed\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 68,\n                    columnNumber: 34\n                  }, this), \": \", /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"text-success\",\n                    children: job.experienceNeeded\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 68,\n                    columnNumber: 60\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 68,\n                  columnNumber: 29\n                }, this), /*#__PURE__*/_jsxDEV(Col, {\n                  children: [/*#__PURE__*/_jsxDEV(Button, {\n                    variant: \"success\",\n                    children: /*#__PURE__*/_jsxDEV(Link, {\n                      style: {\n                        textDecoration: \"none\",\n                        color: \"white\"\n                      },\n                      to: `/myjobs/update/${job._id}`,\n                      children: \"Update\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 71,\n                      columnNumber: 33\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 70,\n                    columnNumber: 29\n                  }, this), ' ', /*#__PURE__*/_jsxDEV(Button, {\n                    variant: \"danger\",\n                    onClick: () => {\n                      deleteThisJob(job._id);\n                    },\n                    children: /*#__PURE__*/_jsxDEV(Link, {\n                      style: {\n                        textDecoration: \"none\",\n                        color: \"white\"\n                      },\n                      to: \"/myjobs\",\n                      children: \"Delete\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 78,\n                      columnNumber: 33\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 77,\n                    columnNumber: 29\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 69,\n                  columnNumber: 29\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 65,\n                columnNumber: 25\n              }, this), /*#__PURE__*/_jsxDEV(\"b\", {\n                children: \"Proposals By \"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 86,\n                columnNumber: 25\n              }, this), job.proposals.map((proposal, index) => {\n                return /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: proposal.email\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 89,\n                  columnNumber: 29\n                }, this);\n              })]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 64,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 17\n          }, this)\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 17\n        }, this);\n      }), \";\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true);\n};\n\n_s(MyJob, \"7wgf66goiv/1QKGxDB/rNFvXGGQ=\");\n\n_c = MyJob;\nexport default MyJob;\n\nvar _c;\n\n$RefreshReg$(_c, \"MyJob\");","map":{"version":3,"sources":["/Users/mac/Downloads/UpClone/frontend/src/user/MyJobs.js"],"names":["React","useEffect","useState","Menu","myJobs","deleteJob","Link","Button","Container","Row","Col","Card","isAuthenticated","Footer","MyJob","jobs","setJobs","user","preload","_id","then","data","error","console","log","deleteThisJob","jobId","backgroundColor","fontSize","margin","marginTop","height","fontWeight","paddingBottom","textAlign","length","textDecoration","color","map","job","index","marginBottom","title","description","typeOfPayment","price","experienceNeeded","proposals","proposal","email"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,SAAf,EAA0BC,QAA1B,QAAyC,OAAzC;AACA,OAAOC,IAAP,MAAiB,cAAjB;AACA,SAASC,MAAT,EAAiBC,SAAjB,QAAkC,wBAAlC;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,SAASC,MAAT,EAAiBC,SAAjB,EAA4BC,GAA5B,EAAiCC,GAAjC,EAAsCC,IAAtC,QAAkD,iBAAlD;AACA,SAASC,eAAT,QAAgC,sBAAhC;AACA,OAAOC,MAAP,MAAmB,gBAAnB;;;;AAEA,MAAMC,KAAK,GAAG,MAAM;AAAA;;AAEpB,QAAM,CAAEC,IAAF,EAAQC,OAAR,IAAoBd,QAAQ,CAAC,EAAD,CAAlC;AAEA,QAAM;AAAEe,IAAAA;AAAF,MAAWL,eAAe,EAAhC;;AAEA,QAAMM,OAAO,GAAG,MAAM;AAClBd,IAAAA,MAAM,CAACa,IAAI,CAACE,GAAN,CAAN,CAAiBC,IAAjB,CAAsBC,IAAI,IAAI;AAC1B,UAAGA,IAAI,CAACC,KAAR,EAAe;AACXC,QAAAA,OAAO,CAACC,GAAR,CAAYH,IAAI,CAACC,KAAjB;AACH,OAFD,MAEK;AACDN,QAAAA,OAAO,CAACK,IAAD,CAAP;AACH;AACJ,KAND;AAOH,GARD;;AASA,QAAMI,aAAa,GAAGC,KAAK,IAAI;AAC3BrB,IAAAA,SAAS,CAACqB,KAAD,CAAT,CAAiBN,IAAjB,CAAsBC,IAAI,IAAI;AAC5B,UAAIA,IAAI,CAACC,KAAT,EAAgB;AACdC,QAAAA,OAAO,CAACC,GAAR,CAAYH,IAAI,CAACC,KAAjB;AACD,OAFD,MAEO;AACLJ,QAAAA,OAAO;AACR;AACF,KAND;AAOD,GARH;;AAUAjB,EAAAA,SAAS,CAAC,MAAM;AACZiB,IAAAA,OAAO;AACV,GAFQ,EAEN,EAFM,CAAT;AAIA,sBACI;AAAA,4BACA;AAAM,MAAA,KAAK,EAAE;AAACS,QAAAA,eAAe,EAAC;AAAjB,OAAb;AAAA,6BACI,QAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YADA,eAIA,QAAC,SAAD;AAAW,MAAA,KAAK,EAAE;AAACC,QAAAA,QAAQ,EAAC,MAAV;AAAkBC,QAAAA,MAAM,EAAC,MAAzB;AAAiCC,QAAAA,SAAS,EAAC,MAA3C;AAAmDC,QAAAA,MAAM,EAAC;AAA1D,OAAlB;AAAA,8BACI;AAAI,QAAA,KAAK,EAAE;AAAEC,UAAAA,UAAU,EAAC,KAAb;AAAoBC,UAAAA,aAAa,EAAC,MAAlC;AAA0CC,UAAAA,SAAS,EAAC;AAApD,SAAX;AAAA,kBAA2EnB,IAAI,CAACoB,MAAL,GAAY,CAAZ,GAAgB,4CAAhB,GAA+D;AAA1I;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI,QAAC,MAAD;AAAQ,QAAA,OAAO,EAAC,WAAhB;AAA4B,QAAA,KAAK,MAAjC;AAAA,+BACI,QAAC,IAAD;AACA,UAAA,KAAK,EAAE;AAACC,YAAAA,cAAc,EAAC,MAAhB;AAAwBC,YAAAA,KAAK,EAAC;AAA9B,WADP;AAEA,UAAA,EAAE,EAAC,UAFH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cAFJ,EASKtB,IAAI,CAACuB,GAAL,CAAS,CAACC,GAAD,EAAKC,KAAL,KAAa;AACnB,4BACI,QAAC,GAAD;AAAK,UAAA,KAAK,EAAE;AAACV,YAAAA,SAAS,EAAC;AAAX,WAAZ;AAAA,iCACA,QAAC,IAAD;AAAM,YAAA,MAAM,EAAE,SAAd;AAAA,oCACI,QAAC,IAAD,CAAM,IAAN;AAAA,sCACI,QAAC,IAAD,CAAM,MAAN;AAAa,gBAAA,KAAK,EAAE;AAACW,kBAAAA,YAAY,EAAC;AAAd,iBAApB;AAAA,uCACA;AAAA,yCAAI;AAAG,oBAAA,SAAS,EAAC,cAAb;AAAA,8BAA6BF,GAAG,CAACG;AAAjC;AAAA;AAAA;AAAA;AAAA;AAAJ;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA,sBADJ,eAII,QAAC,IAAD,CAAM,IAAN;AAAA,wCACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBADA,oBACoB;AAAM,kBAAA,SAAS,EAAC;AAAhB;AAAA;AAAA;AAAA;AAAA,wBADpB,EAC2DH,GAAG,CAACI,WAD/D;AAAA;AAAA;AAAA;AAAA;AAAA,sBAJJ;AAAA;AAAA;AAAA;AAAA;AAAA,oBADJ,eASI,QAAC,IAAD,CAAM,IAAN;AAAA,sCACI,QAAC,GAAD;AAAA,wCACI,QAAC,GAAD;AAAA,0CAAK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BAAL,qBAA6B;AAAM,oBAAA,SAAS,EAAC,cAAhB;AAAA,8BAAgCJ,GAAG,CAACK;AAApC;AAAA;AAAA;AAAA;AAAA,0BAA7B;AAAA;AAAA;AAAA;AAAA;AAAA,wBADJ,eAEI,QAAC,GAAD;AAAA,0CAAK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BAAL,qBAAmB;AAAM,oBAAA,SAAS,EAAC,cAAhB;AAAA,+BAAgCL,GAAG,CAACM,KAApC;AAAA;AAAA;AAAA;AAAA;AAAA,0BAAnB;AAAA;AAAA;AAAA;AAAA;AAAA,wBAFJ,eAGI,QAAC,GAAD;AAAA,0CAAK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BAAL,qBAA+B;AAAM,oBAAA,SAAS,EAAC,cAAhB;AAAA,8BAAgCN,GAAG,CAACO;AAApC;AAAA;AAAA;AAAA;AAAA,0BAA/B;AAAA;AAAA;AAAA;AAAA;AAAA,wBAHJ,eAII,QAAC,GAAD;AAAA,0CACA,QAAC,MAAD;AAAQ,oBAAA,OAAO,EAAC,SAAhB;AAAA,2CACI,QAAC,IAAD;AACA,sBAAA,KAAK,EAAE;AAACV,wBAAAA,cAAc,EAAC,MAAhB;AAAwBC,wBAAAA,KAAK,EAAC;AAA9B,uBADP;AAEA,sBAAA,EAAE,EAAG,kBAAiBE,GAAG,CAACpB,GAAI,EAF9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,0BADA,EAOU,GAPV,eAQA,QAAC,MAAD;AAAQ,oBAAA,OAAO,EAAC,QAAhB;AAAyB,oBAAA,OAAO,EAAE,MAAM;AAACM,sBAAAA,aAAa,CAACc,GAAG,CAACpB,GAAL,CAAb;AAAuB,qBAAhE;AAAA,2CACI,QAAC,IAAD;AACA,sBAAA,KAAK,EAAE;AAACiB,wBAAAA,cAAc,EAAC,MAAhB;AAAwBC,wBAAAA,KAAK,EAAC;AAA9B,uBADP;AAEA,sBAAA,EAAE,EAAC,SAFH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,0BARA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAJJ;AAAA;AAAA;AAAA;AAAA;AAAA,sBADJ,eAsBI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAtBJ,EAuBME,GAAG,CAACQ,SAAL,CAAgBT,GAAhB,CAAoB,CAACU,QAAD,EAAWR,KAAX,KAAqB;AACtC,oCACA;AAAA,4BAAIQ,QAAQ,CAACC;AAAb;AAAA;AAAA;AAAA;AAAA,wBADA;AAGH,eAJA,CAvBL;AAAA;AAAA;AAAA;AAAA;AAAA,oBATJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADA,WAAqCT,KAArC;AAAA;AAAA;AAAA;AAAA,gBADJ;AA0CF,OA3CD,CATL;AAAA;AAAA;AAAA;AAAA;AAAA,YAJA,eA2DA,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,YA3DA;AAAA,kBADJ;AAiEC,CA9FD;;GAAM1B,K;;KAAAA,K;AAgGN,eAAeA,KAAf","sourcesContent":["import React, {useEffect, useState} from 'react';\nimport Menu from '../core/Menu';\nimport { myJobs, deleteJob } from '../auth/helper/jobs.js';\nimport { Link } from \"react-router-dom\";\nimport { Button, Container, Row, Col, Card } from 'react-bootstrap';\nimport { isAuthenticated } from \"../auth/helper/index\";\nimport Footer from \"../core/Footer\";\n\nconst MyJob = () => {\n\nconst [ jobs, setJobs ] = useState([]);\n\nconst { user } = isAuthenticated();\n\nconst preload = () => {\n    myJobs(user._id).then(data => {\n        if(data.error) {\n            console.log(data.error)\n        }else{\n            setJobs(data)\n        }\n    });\n}\nconst deleteThisJob = jobId => {\n    deleteJob(jobId).then(data => {\n      if (data.error) {\n        console.log(data.error);\n      } else {\n        preload();\n      }\n    });\n  };\n\nuseEffect(() => {\n    preload();  \n}, []);\n\nreturn(\n    <>\n    <div  style={{backgroundColor:\"#1d4354\"}}>\n        <Menu />\n    </div>\n    <Container style={{fontSize:\"14px\", margin:\"auto\", marginTop:\"50px\", height:\"100vh\"}}>\n        <h3 style={{ fontWeight:\"900\", paddingBottom:\"10px\", textAlign:\"center\"}}>{jobs.length>0 ? \"Here's a List of all the Jobs You Uploaded\" : \"Sorry you created no job Make one!\"}</h3>\n        <Button variant=\"secondary\" block>\n            <Link \n            style={{textDecoration:\"none\", color:\"white\"}} \n            to=\"/add/job\">\n                Add New Job\n            </Link>\n        </Button>\n        {jobs.map((job,index)=>{\n            return(\n                <Col style={{marginTop:\"20px\"}} key={index}>\n                <Card border={'success'} >\n                    <Card.Body>\n                        <Card.Header style={{marginBottom:\"20px\",}}>\n                        <h5><p className=\"text-success\">{job.title}</p></h5>\n                        </Card.Header>\n                        <Card.Text>\n                        <b>Description:</b> <span className=\"text-success\"></span>{job.description}\n                        </Card.Text>\n                    </Card.Body>\n                    <Card.Body>\n                        <Row>\n                            <Col><b>Type of Payment</b>: <span className=\"text-success\">{job.typeOfPayment}</span></Col>\n                            <Col><b>Price</b>: <span className=\"text-success\">{job.price} $</span></Col>\n                            <Col><b>Experience Needed</b>: <span className=\"text-success\">{job.experienceNeeded}</span></Col>\n                            <Col>\n                            <Button variant=\"success\">\n                                <Link \n                                style={{textDecoration:\"none\", color:\"white\"}} \n                                to={`/myjobs/update/${job._id}`}>\n                                    Update\n                                </Link>\n                            </Button>{' '}\n                            <Button variant=\"danger\" onClick={() => {deleteThisJob(job._id)}}>\n                                <Link \n                                style={{textDecoration:\"none\", color:\"white\"}} \n                                to=\"/myjobs\">\n                                    Delete \n                                </Link>\n                            </Button>\n                            </Col>\n                        </Row>\n                        <b>Proposals By </b>\n                        {(job.proposals).map((proposal, index) => {\n                            return(\n                            <p>{proposal.email}</p>\n                            )\n                        })}\n                    </Card.Body>\n                </Card>\n            </Col>\n        )})};\n    </Container>\n    \n    <Footer />\n    \n    \n    </>\n)\n}\n\nexport default MyJob;"]},"metadata":{},"sourceType":"module"}