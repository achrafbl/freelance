[{"/Users/mac/Downloads/UpClone/frontend/src/index.js":"1","/Users/mac/Downloads/UpClone/frontend/src/Routes.js":"2","/Users/mac/Downloads/UpClone/frontend/src/NotFound.js":"3","/Users/mac/Downloads/UpClone/frontend/src/user/Signin.js":"4","/Users/mac/Downloads/UpClone/frontend/src/user/Signup.js":"5","/Users/mac/Downloads/UpClone/frontend/src/user/Jobs.js":"6","/Users/mac/Downloads/UpClone/frontend/src/user/NewJob.js":"7","/Users/mac/Downloads/UpClone/frontend/src/user/MyJobs.js":"8","/Users/mac/Downloads/UpClone/frontend/src/core/Home.js":"9","/Users/mac/Downloads/UpClone/frontend/src/user/Freelancers.js":"10","/Users/mac/Downloads/UpClone/frontend/src/user/NewProfile.js":"11","/Users/mac/Downloads/UpClone/frontend/src/user/UpdateProfile.js":"12","/Users/mac/Downloads/UpClone/frontend/src/user/UpdateJob.js":"13","/Users/mac/Downloads/UpClone/frontend/src/user/MyProfile.js":"14","/Users/mac/Downloads/UpClone/frontend/src/admin/AdminAllJobs.js":"15","/Users/mac/Downloads/UpClone/frontend/src/admin/AdminPanel.js":"16","/Users/mac/Downloads/UpClone/frontend/src/admin/AdminAllProfiles.js":"17","/Users/mac/Downloads/UpClone/frontend/src/auth/helper/profiles.js":"18","/Users/mac/Downloads/UpClone/frontend/src/auth/helper/jobs.js":"19","/Users/mac/Downloads/UpClone/frontend/src/core/Menu.js":"20","/Users/mac/Downloads/UpClone/frontend/src/core/Footer.js":"21","/Users/mac/Downloads/UpClone/frontend/src/core/Companies.js":"22","/Users/mac/Downloads/UpClone/frontend/src/core/Content.js":"23","/Users/mac/Downloads/UpClone/frontend/src/auth/helper/index.js":"24","/Users/mac/Downloads/UpClone/frontend/src/backend.js":"25","/Users/mac/Downloads/UpClone/frontend/src/core/Testimonial.js":"26"},{"size":202,"mtime":1688021816000,"results":"27","hashOfConfig":"28"},{"size":1880,"mtime":1688021816000,"results":"29","hashOfConfig":"28"},{"size":258,"mtime":1688021816000,"results":"30","hashOfConfig":"28"},{"size":4021,"mtime":1688021816000,"results":"31","hashOfConfig":"28"},{"size":5597,"mtime":1689585242851,"results":"32","hashOfConfig":"28"},{"size":2494,"mtime":1688021816000,"results":"33","hashOfConfig":"28"},{"size":5209,"mtime":1688021816000,"results":"34","hashOfConfig":"28"},{"size":3713,"mtime":1688021816000,"results":"35","hashOfConfig":"28"},{"size":1587,"mtime":1689585424423,"results":"36","hashOfConfig":"28"},{"size":2559,"mtime":1688021816000,"results":"37","hashOfConfig":"28"},{"size":6191,"mtime":1688021816000,"results":"38","hashOfConfig":"28"},{"size":7021,"mtime":1688021816000,"results":"39","hashOfConfig":"28"},{"size":5870,"mtime":1688021816000,"results":"40","hashOfConfig":"28"},{"size":3512,"mtime":1688021816000,"results":"41","hashOfConfig":"28"},{"size":3286,"mtime":1688021816000,"results":"42","hashOfConfig":"28"},{"size":2065,"mtime":1688021816000,"results":"43","hashOfConfig":"28"},{"size":3667,"mtime":1688021816000,"results":"44","hashOfConfig":"28"},{"size":2237,"mtime":1688021816000,"results":"45","hashOfConfig":"28"},{"size":2084,"mtime":1688021816000,"results":"46","hashOfConfig":"28"},{"size":4542,"mtime":1689585297078,"results":"47","hashOfConfig":"28"},{"size":441,"mtime":1689585242851,"results":"48","hashOfConfig":"28"},{"size":1553,"mtime":1688021816000,"results":"49","hashOfConfig":"28"},{"size":4086,"mtime":1689585242850,"results":"50","hashOfConfig":"28"},{"size":2137,"mtime":1688021816000,"results":"51","hashOfConfig":"28"},{"size":47,"mtime":1688021816000,"results":"52","hashOfConfig":"28"},{"size":6950,"mtime":1689585242851,"results":"53","hashOfConfig":"28"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},"kpgvk6",{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"56"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64","usedDeprecatedRules":"56"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"56"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82","usedDeprecatedRules":"56"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85","usedDeprecatedRules":"56"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"88","usedDeprecatedRules":"56"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"91","usedDeprecatedRules":"56"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"94","usedDeprecatedRules":"56"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"97","usedDeprecatedRules":"56"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"110","messages":"111","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"112","usedDeprecatedRules":"56"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/mac/Downloads/UpClone/frontend/src/index.js",[],["117","118"],"/Users/mac/Downloads/UpClone/frontend/src/Routes.js",[],"/Users/mac/Downloads/UpClone/frontend/src/NotFound.js",["119"],"import './App.css';\n\nfunction NotFound() {\n  return (\n    <div className=\"App\" style={{height:\"100vh\", width:\"100%\", display:\"flex\", justifyContent:\"center\", alignItems:\"center\"}}>\n        <img src=\"./404.gif\" />\n\n    </div>\n  );\n}\n\nexport default NotFound;\n","/Users/mac/Downloads/UpClone/frontend/src/user/Signin.js",["120"],"import React, {useState} from 'react';\nimport Menu from '../core/Menu';\nimport { Container, Form, Button, Col, Row } from 'react-bootstrap';\nimport { Link, Redirect } from \"react-router-dom\";\nimport { signin, authenticate, isAuthenticated } from '../auth/helper/index'\nimport Footer from \"../core/Footer\";\n\n\nconst Signin = () =>{\n    const [values, setValues] = useState({\n        email:\"\",\n        password:\"\",\n        error:\"\",\n        loading:false,\n        didRedirect: false\n    })\n\n    const { email, password, error, loading, didRedirect } = values;\n\n    const handleChange = name => event => {\n        setValues({...values, error: false, [name]:event.target.value });\n    };\n\n    const onSubmit = event => {\n        event.preventDefault();\n        setValues({ ...values, error: false, loading: true });\n        signin({ email, password })\n          .then(data => {\n            if (data.error) {\n                console.log(data.error)\n              setValues({ ...values, error: data.error, loading: false });\n            } else {\n                authenticate(data, () => {\n                setValues({\n                  ...values,\n                  didRedirect: true\n                });\n              });\n            }\n          })\n          .catch(console.log(\"signin request failed\"));\n    };\n\n    const performRedirect = () => {\n        if (didRedirect) {\n            const { user } = isAuthenticated(); \n          if (user && user.role === 0) {\n            return <Redirect to=\"/adminportal\" />;\n          } \n          else if(user && user.role === 1) {\n            return <Redirect to=\"/freelancers\" />;\n          }\n          else if(user && user.role === 2) {\n            return <Redirect to=\"/jobs\" />;\n          }\n        }\n    };\n\n    const errorMessage = () => {\n    return (\n        <div className=\"row\">\n        <div className=\"col-md-6 offset-sm-3 text-left\">\n            <div\n            className=\"alert alert-danger\"\n            style={{ display: error ? \"\" : \"none\" }}\n            >\n            {error}\n            </div>\n        </div>\n        </div>\n        );\n    };\n\n    return(\n        <>\n        <div  style={{backgroundColor:\"#1d4354\"}}>\n            <Menu />\n        </div>\n        <Container style={{padding:\"35px\", height:\"100vh\"}}>\n            <Row >\n                <Col md={{ span: 6, offset: 3 }} style={{border:\"2px solid black\", padding:\"30px\", borderRadius:\"7px\"}}>\n                <h4 style={{ fontWeight:\"900\", paddingBottom:\"10px\"}}>You already have an account, Login here</h4>\n                    <Form  style={{backgroundColor:\"white\"}}>\n                        <Form.Group controlId=\"email\">\n                            <Form.Control \n                            type=\"email\" \n                            placeholder=\"Enter email\"\n                            onChange={handleChange(\"email\")}\n                            value={email} />\n\n                            <Form.Text className=\"text-muted\">\n                            We'll never share your email with anyone else.\n                            </Form.Text>\n                        </Form.Group>\n                        <Form.Group controlId=\"password\">\n                            <Form.Control \n                            type=\"password\" \n                            placeholder=\"Password\"\n                            onChange={handleChange(\"password\")}\n                            value={password} />\n                        </Form.Group>\n                        \n                        <Button variant=\"success\" type=\"submit\" onClick={onSubmit} block>\n                            Submit\n                        </Button>\n                        <Form.Text >\n                            Doesn't Have an account<Link to=\"/signup\" className=\"text-success\"> Signup</Link>\n                        </Form.Text>\n                    </Form>\n                </Col>\n            </Row>\n        </Container>\n        {errorMessage()}\n        {performRedirect()}\n    <Footer />\n\n        </>\n    );\n}\n\nexport default Signin;","/Users/mac/Downloads/UpClone/frontend/src/user/Signup.js",["121","122","123","124","125"],"/Users/mac/Downloads/UpClone/frontend/src/user/Jobs.js",[],"/Users/mac/Downloads/UpClone/frontend/src/user/NewJob.js",[],"/Users/mac/Downloads/UpClone/frontend/src/user/MyJobs.js",["126"],"import React, {useEffect, useState} from 'react';\nimport Menu from '../core/Menu';\nimport { myJobs, deleteJob } from '../auth/helper/jobs.js';\nimport { Link } from \"react-router-dom\";\nimport { Button, Container, Row, Col, Card } from 'react-bootstrap';\nimport { isAuthenticated } from \"../auth/helper/index\";\nimport Footer from \"../core/Footer\";\n\nconst MyJob = () => {\n\nconst [ jobs, setJobs ] = useState([]);\n\nconst { user } = isAuthenticated();\n\nconst preload = () => {\n    myJobs(user._id).then(data => {\n        if(data.error) {\n            console.log(data.error)\n        }else{\n            setJobs(data)\n        }\n    });\n}\nconst deleteThisJob = jobId => {\n    deleteJob(jobId).then(data => {\n      if (data.error) {\n        console.log(data.error);\n      } else {\n        preload();\n      }\n    });\n  };\n\nuseEffect(() => {\n    preload();  \n}, []);\n\nreturn(\n    <>\n    <div  style={{backgroundColor:\"#1d4354\"}}>\n        <Menu />\n    </div>\n    <Container style={{fontSize:\"14px\", margin:\"auto\", marginTop:\"50px\", height:\"100vh\"}}>\n        <h3 style={{ fontWeight:\"900\", paddingBottom:\"10px\", textAlign:\"center\"}}>{jobs.length>0 ? \"Here's a List of all the Jobs You Uploaded\" : \"Sorry you created no job Make one!\"}</h3>\n        <Button variant=\"secondary\" block>\n            <Link \n            style={{textDecoration:\"none\", color:\"white\"}} \n            to=\"/add/job\">\n                Add New Job\n            </Link>\n        </Button>\n        {jobs.map((job,index)=>{\n            return(\n                <Col style={{marginTop:\"20px\"}} key={index}>\n                <Card border={'success'} >\n                    <Card.Body>\n                        <Card.Header style={{marginBottom:\"20px\",}}>\n                        <h5><p className=\"text-success\">{job.title}</p></h5>\n                        </Card.Header>\n                        <Card.Text>\n                        <b>Description:</b> <span className=\"text-success\"></span>{job.description}\n                        </Card.Text>\n                    </Card.Body>\n                    <Card.Body>\n                        <Row>\n                            <Col><b>Type of Payment</b>: <span className=\"text-success\">{job.typeOfPayment}</span></Col>\n                            <Col><b>Price</b>: <span className=\"text-success\">{job.price} $</span></Col>\n                            <Col><b>Experience Needed</b>: <span className=\"text-success\">{job.experienceNeeded}</span></Col>\n                            <Col>\n                            <Button variant=\"success\">\n                                <Link \n                                style={{textDecoration:\"none\", color:\"white\"}} \n                                to={`/myjobs/update/${job._id}`}>\n                                    Update\n                                </Link>\n                            </Button>{' '}\n                            <Button variant=\"danger\" onClick={() => {deleteThisJob(job._id)}}>\n                                <Link \n                                style={{textDecoration:\"none\", color:\"white\"}} \n                                to=\"/myjobs\">\n                                    Delete \n                                </Link>\n                            </Button>\n                            </Col>\n                        </Row>\n                        <b>Proposals By </b>\n                        {(job.proposals).map((proposal, index) => {\n                            return(\n                            <p>{proposal.email}</p>\n                            )\n                        })}\n                    </Card.Body>\n                </Card>\n            </Col>\n        )})};\n    </Container>\n    \n    <Footer />\n    \n    \n    </>\n)\n}\n\nexport default MyJob;","/Users/mac/Downloads/UpClone/frontend/src/core/Home.js",["127"],"/Users/mac/Downloads/UpClone/frontend/src/user/Freelancers.js",[],"/Users/mac/Downloads/UpClone/frontend/src/user/NewProfile.js",[],"/Users/mac/Downloads/UpClone/frontend/src/user/UpdateProfile.js",["128","129"],"import React, {useState, useEffect} from 'react';\nimport Menu from '../core/Menu';\nimport { Container, Form, Button, Col, Row } from 'react-bootstrap';\nimport { isAuthenticated } from '../auth/helper/index';\nimport { profileById, updateProfile  } from '../auth/helper/profiles';\nimport Footer from \"../core/Footer\";\n\n\nconst UpdateProfile = ({ match }) =>{\n\n    const { user, token} = isAuthenticated();\n\n    const [values, setValues] = useState({\n        title: \"\",\n        description:\"\",\n        price: \"\",\n        typeOfPayment:\"\",\n        qualification:\"\",\n        institution:\"\",\n        availabilty:\"\",\n        error: \"\",\n        success: false\n      });\n\n    const preload = (profileId) => {\n        profileById(profileId).then(data => {\n            if (data.err) {\n              setValues({ ...values, error: data.err });\n            } else {\n              setValues({\n                ...values,\n                title: data.title,\n                description:data.description,\n                price: data.price,\n                typeOfPayment:data.typeOfPayment,\n                qualification:data.qualification,\n                institution:data.institution,\n                availabilty:data.availabilty,\n                formData: new FormData()\n              });\n            }\n          });\n        };\n\n    const { title,description, typeOfPayment, price, qualification, institution, availabilty, error, success } = values;\n\n    const handleChange = name => event => {\n        setValues({ ...values, error: false, [name]: event.target.value });\n    };\n\n\n    const onSubmit = event => {\n        event.preventDefault();\n        setValues({ ...values, error: false });\n        updateProfile({ title,description, typeOfPayment, price, qualification, institution, availabilty}, match.params.profileId, token)\n          .then(data => {\n            if (data.err) {\n              setValues({ ...values, error: data.error, success: false });\n            } else {\n              setValues({\n                ...values,\n                title: \"\",\n                description:\"\",\n                price: \"\",\n                typeOfPayment:\"\",\n                qualification:\"\",\n                institution:\"\",\n                availabilty:\"\",\n                error: \"\",\n                success: true\n              });\n            }\n          })\n          .catch(console.log(\"Error in Updating Profile\"));\n    };\n\n    const successMessage = () => {\n        return (\n          <div className=\"row\">\n            <div className=\"col-md-6 offset-sm-3 text-left\">\n              <div\n                className=\"alert alert-success\"\n                style={{ display: success ? \"\" : \"none\" }}\n              >\n                Profile Updated.\n              </div>\n            </div>\n          </div>\n        );\n      };\n    \n      const errorMessage = () => {\n        return (\n          <div className=\"row\">\n            <div className=\"col-md-6 offset-sm-3 text-left\">\n              <div\n                className=\"alert alert-danger\"\n                style={{ display: error ? \"\" : \"none\" }}\n              >\n                {error}\n              </div>\n            </div>\n          </div>\n        );\n      };\n    \n    useEffect(()=> {\n        preload(match.params.profileId)\n    }, [])\n\n    return(\n        <>\n        <div  style={{backgroundColor:\"#1d4354\"}}>\n            <Menu />\n        </div>\n        <Container style={{padding:\"35px\"}}>\n            <Row >\n                <Col md={{ span: 6, offset: 3 }} style={{border:\"2px solid black\", padding:\"30px\", borderRadius:\"7px\"}}>\n                    <h4 style={{ fontWeight:\"900\", paddingBottom:\"10px\"}}>Update Your Profile</h4>\n                    <Form>                   \n                        <Form.Group controlId=\"title\">\n                            <Form.Control \n                            type=\"text\" \n                            placeholder=\"Precisely tell us what you are good at\" \n                            onChange={handleChange(\"title\")}\n                            value={title} />\n                        </Form.Group>\n                        <Form.Group controlId=\"description\">\n                            <Form.Control \n                            type=\"text\" \n                            placeholder=\"Description of your skills\" \n                            onChange={handleChange(\"description\")}\n                            value={description}  />\n                        </Form.Group>\n                        <Form.Group>\n                            <Form.Label>Type of Payment </Form.Label>\n                            <Form.Control as=\"select\" onChange={handleChange(\"typeOfPayment\")} value={typeOfPayment}>\n                                <option>Select</option>\n                                <option value=\"Hourly\">Hourly</option>\n                                <option value=\"Fixed\">Fixed</option>\n                            </Form.Control>\n                        </Form.Group>\n                        <Form.Group controlId=\"price\">\n                            <Form.Control \n                            type=\"text\" \n                            placeholder= \"How much do you charge\"\n                            onChange={handleChange(\"price\")}\n                            value={price} />\n                        </Form.Group>\n                        <Form.Group>\n                            <Form.Label>Qualification </Form.Label>\n                            <Form.Control as=\"select\" onChange={handleChange(\"qualification\")} value={qualification}>\n                                <option>Select</option>\n                                <option value=\"Graduation\">Graduation</option>\n                                <option value=\"Post Graduation\">Post Graduation</option>\n                                <option value=\"High School\">High School</option>\n                            </Form.Control>\n                        </Form.Group>\n                        <Form.Group controlId=\"institution\">\n                            <Form.Control \n                            type=\"text\" \n                            placeholder= \"Name of your Alma Mater\"\n                            onChange={handleChange(\"institution\")}\n                            value={institution} />\n                        </Form.Group>\n                        <Form.Group controlId=\"availabilty\">\n                            <Form.Control \n                            type=\"text\" \n                            placeholder= \"How many hours/week you can work\"\n                            onChange={handleChange(\"availabilty\")}\n                            value={availabilty} />\n                        </Form.Group>\n                        <Button variant=\"success\" type=\"submit\" onClick={onSubmit} block>\n                            Submit\n                        </Button>\n                    </Form>\n                </Col>\n            </Row>\n        </Container>\n        {successMessage()}\n        {errorMessage()}\n    <Footer />\n\n        </>\n    );\n}\n\nexport default UpdateProfile;","/Users/mac/Downloads/UpClone/frontend/src/user/UpdateJob.js",["130","131"],"import React, {useState, useEffect} from 'react';\nimport Menu from '../core/Menu';\nimport { Container, Form, Button, Col, Row } from 'react-bootstrap';\nimport { isAuthenticated } from '../auth/helper/index';\nimport { jobById, updateJob } from '../auth/helper/jobs';\nimport Footer from \"../core/Footer\";\n\n\nconst NewJob = ({match}) =>{\n\n    const [values, setValues] = useState({\n        title: \"\",\n        description:\"\",\n        typeOfPayment: \"\",\n        price: \"\",\n        experienceNeeded:\"\",\n        error: \"\",\n        success: false\n      });\n\n    const preload = (jobId) => {\n        jobById(jobId).then(data => {\n        if (data.err) {\n            setValues({ ...values, error: data.err });\n        } else {\n            setValues({\n            ...values,\n            title: data.title ,\n            description: data.description ,\n            typeOfPayment: data.typeOfPayment ,\n            price: data.price ,\n            experienceNeeded: data.experienceNeeded ,\n            formData: new FormData()\n            });\n        }\n        });\n    };\n\n    const { title,description, typeOfPayment, price, experienceNeeded, error, success } = values;\n\n    const handleChange = name => event => {\n        setValues({ ...values, error: false, [name]: event.target.value });\n    };\n\n    const {user, token} = isAuthenticated();\n\n    const onSubmit = event => {\n        event.preventDefault();\n        setValues({ ...values, error: false });\n        updateJob({ title, description, typeOfPayment, price, experienceNeeded}, match.params.jobId, token)\n          .then(data => {\n            if (data.err) {\n              setValues({ ...values, error: data.err, success: false });\n            } else {\n              setValues({\n                ...values,\n                title: \"\",\n                description:\"\",\n                typeOfPayment: \"\",\n                price: \"\",\n                experienceNeeded:\"\",\n                error: \"\",\n                success: true\n              });\n            }\n          })\n          .catch(console.log(\"Error in signup\"));\n    };\n\n    const successMessage = () => {\n        return (\n          <div className=\"row\">\n            <div className=\"col-md-6 offset-sm-3 text-left\">\n              <div\n                className=\"alert alert-success\"\n                style={{ display: success ? \"\" : \"none\" }}\n              >\n                Job Updated.\n              </div>\n            </div>\n          </div>\n        );\n      };\n    \n      const errorMessage = () => {\n        return (\n          <div className=\"row\">\n            <div className=\"col-md-6 offset-sm-3 text-left\">\n              <div\n                className=\"alert alert-danger\"\n                style={{ display: error ? \"\" : \"none\" }}\n              >\n                {error}\n              </div>\n            </div>\n          </div>\n        );\n      };\n      useEffect(()=> {\n        preload(match.params.jobId)\n    }, [])\n    return(\n        <>\n        <div  style={{backgroundColor:\"#1d4354\"}}>\n            <Menu />\n        </div>\n        <Container style={{padding:\"35px\", height:\"100vh\"}}>\n            <Row >\n                <Col md={{ span: 6, offset: 3 }} style={{border:\"2px solid black\", padding:\"30px\", borderRadius:\"7px\"}}>\n                    <h4 style={{ fontWeight:\"900\", paddingBottom:\"10px\"}}>Add a New Job</h4>\n                    <Form>                   \n                        <Form.Group controlId=\"title\">\n                            <Form.Control \n                            type=\"text\" \n                            placeholder=\"Job Title\" \n                            onChange={handleChange(\"title\")}\n                            value={title} />\n                        </Form.Group>\n                        <Form.Group controlId=\"description\">\n                            <Form.Control \n                            type=\"text\" \n                            placeholder=\"Description of Job\" \n                            onChange={handleChange(\"description\")}\n                            value={description}  />\n                        </Form.Group>\n                        <Form.Group>\n                            <Form.Label>Type of Payment </Form.Label>\n                            <Form.Control as=\"select\" onChange={handleChange(\"typeOfPayment\")} value={typeOfPayment}>\n                                <option>Select</option>\n                                <option value=\"Hourly\">Hourly</option>\n                                <option value=\"Fixed\">Fixed</option>\n                            </Form.Control>\n                        </Form.Group>\n                        <Form.Group controlId=\"price\">\n                            <Form.Control \n                            type=\"text\" \n                            placeholder=\"Price (USD)\"\n                            onChange={handleChange(\"price\")}\n                            value={price} />\n                        </Form.Group>\n                        <Form.Group>\n                            <Form.Label>Experience Needed</Form.Label>\n                            <Form.Control as=\"select\" onChange={handleChange(\"experienceNeeded\")} value={experienceNeeded}>\n                                <option>Select</option>\n                                <option value=\"Basic\">Basic</option>\n                                <option value=\"Intermediate\">Intermediate</option>\n                                <option value=\"Advanced\">Advanced</option>\n                            </Form.Control>\n                        </Form.Group>\n                        <Button variant=\"success\" type=\"submit\" onClick={onSubmit} block>\n                            Submit\n                        </Button>\n                    </Form>\n                </Col>\n            </Row>\n        </Container>\n        {successMessage()}\n        {errorMessage()}\n    <Footer />\n\n        </>\n    );\n}\n\nexport default NewJob;","/Users/mac/Downloads/UpClone/frontend/src/user/MyProfile.js",["132"],"import React, {useEffect, useState} from 'react';\nimport Menu from '../core/Menu';\nimport { myProfile } from '../auth/helper/profiles.js';\nimport { Link } from \"react-router-dom\";\nimport { Button, Container, Row, Col, Card } from 'react-bootstrap';\nimport { isAuthenticated } from \"../auth/helper/index\";\nimport Footer from \"../core/Footer\";\n\nconst MyJob = () => {\n\nconst [ profiles, setProfiles ] = useState([]);\n\nconst { user } = isAuthenticated();\n\nconst preload = () => {\n    myProfile(user._id).then(data => {\n        if(data.error) {\n            console.log(data.error)\n        }else{\n            setProfiles(data)\n        }\n    });\n}\n\nuseEffect(() => {\n    preload();  \n}, []);\n\nreturn(\n    <>\n    <div  style={{backgroundColor:\"#1d4354\"}}>\n        <Menu />\n    </div>\n    <Container style={{fontSize:\"14px\", margin:\"auto\" ,marginTop:\"50px\", height:\"100vh\"}}>\n        <h3 style={{ fontWeight:\"900\", paddingBottom:\"10px\", textAlign:\"center\"}}>{profiles.length>0 ? `Here is your profile ${user.email}` : \"Sorry you created no Profile Make one!\"}</h3>\n        {profiles.length === 0 && (\n            <Button variant='secondary' block>\n                <Link \n                style={{textDecoration:\"none\", color:\"white\"}} \n                to=\"/add/profile\">\n                    Add New Profile\n                </Link>\n            </Button>\n        )}\n        \n        {profiles.map((profile,index)=>{\n            return(\n                <Col style={{marginTop:\"20px\"}} key={index}>\n                <Card border={'success'} >\n                    <Card.Body>\n                        <Card.Header style={{marginBottom:\"20px\",}}>\n                        <h5><p className=\"text-success\">{profile.title}</p></h5>\n                        </Card.Header>\n                        <Card.Text>\n                        <b>Description:</b> <span className=\"text-success\">{profile.description}</span><br />\n                        <b>Availability:</b> <span className=\"text-success\">{profile.availabilty} Hours/ Week</span> \n                        </Card.Text>\n                    </Card.Body>\n                    <Card.Body>\n                        <Row>\n                            <Col><b>Type of Payment:</b> <span className=\"text-success\">{profile.typeOfPayment}</span></Col>\n                            <Col><b>Price:</b> <span className=\"text-success\">{profile.price} $</span> </Col>\n                            <Col><b>Qualification:</b> <p className=\"text-success\">{profile.qualification}</p></Col>\n                            <Col><b>Institution:</b> <p className=\"text-success\">{profile.institution}</p></Col>\n                            <Col>\n                            <Button variant=\"success\">\n                                <Link \n                                style={{textDecoration:\"none\", color:\"white\"}} \n                                to={`/myprofile/update/${profile._id}`}>\n                                    Update\n                                </Link>\n                            </Button>\n                            </Col>\n                        </Row>\n                        <b>Offers By following employers </b><br />\n                        {(profile.offers).map((offer, index) => {\n                            return(\n                            <p>{offer.email}</p>\n                            )\n                        })}\n                    </Card.Body>\n                </Card>\n            </Col>\n        )})};\n    </Container>\n    <Footer />\n\n    </>\n)\n}\n\nexport default MyJob;","/Users/mac/Downloads/UpClone/frontend/src/admin/AdminAllJobs.js",["133","134"],"import React, {useEffect, useState} from 'react';\nimport Menu from '../core/Menu';\nimport { getAllJobs, deleteJob } from '../auth/helper/jobs';\nimport { Link } from \"react-router-dom\";\nimport { Button, Container, Row, Col, Card, Nav } from 'react-bootstrap';\nimport { isAuthenticated } from \"../auth/helper/index\";\n\nconst AdminAllJobs = () => {\n\nconst [ jobs, setJobs ] = useState([]);\n\nconst { user } = isAuthenticated();\n\nconst preload = () => {\n    getAllJobs().then(data => {\n        if(data.error) {\n            console.log(data.error)\n        }else{\n            setJobs(data)\n        }\n    });\n}\nconst deleteThisJob = jobId => {\n    deleteJob(jobId).then(data => {\n      if (data.error) {\n        console.log(data.error);\n      } else {\n        preload();\n      }\n    });\n  };\n\nuseEffect(() => {\n    preload();  \n}, []);\n\nreturn(\n    <>\n    <Container>\n        <Nav variant=\"tabs\" defaultActiveKey=\"/alljobs\">\n            <Nav.Item>\n                <Nav.Link href=\"/\" >Home</Nav.Link>\n            </Nav.Item>\n            <Nav.Item>\n                <Nav.Link href=\"/adminportal\" >Admin</Nav.Link>\n            </Nav.Item>\n            <Nav.Item>\n                <Nav.Link href=\"/alljobs\" >All Jobs</Nav.Link>\n            </Nav.Item>\n            <Nav.Item>\n                <Nav.Link href=\"/allprofiles\">All Profiles</Nav.Link>\n            </Nav.Item>\n        </Nav>\n    </Container>\n    <Container style={{fontSize:\"14px\", margin:\"auto\", marginTop:\"50px\", height:\"100vh\"}}>\n        <h3 style={{ fontWeight:\"900\", paddingBottom:\"10px\", textAlign:\"center\"}}>{jobs.length>0 ? \"Here's a List of all the Jobs Uploaded\" : \"Sorry no jobs created\"}</h3>\n        {jobs.map((job,index)=>{\n            return(\n                <Col style={{marginTop:\"20px\"}} key={index}>\n                <Card border={'success'} >\n                    <Card.Body>\n                        <Card.Header style={{marginBottom:\"20px\",}}>\n                        <h5><p className=\"text-success\">{job.title}</p></h5>\n                        </Card.Header>\n                        <Card.Text>\n                        <b>Description:</b> <span className=\"text-success\"></span>{job.description}\n                        </Card.Text>\n                    </Card.Body>\n                    <Card.Body>\n                        <Row>\n                            <Col><b>Type of Payment</b>: <span className=\"text-success\">{job.typeOfPayment}</span></Col>\n                            <Col><b>Price</b>: <span className=\"text-success\">{job.price}</span></Col>\n                            <Col><b>Experience Needed</b>: <span className=\"text-success\">{job.experienceNeeded}</span></Col>\n                            <Col>\n                            <Button variant=\"danger\" onClick={() => {deleteThisJob(job._id)}}>\n                                <Link \n                                style={{textDecoration:\"none\", color:\"white\"}} \n                                to=\"/alljobs\">\n                                    Delete \n                                </Link>\n                            </Button>\n                            </Col>\n                        </Row>\n                    </Card.Body>\n                </Card>\n            </Col>\n        )})};\n    </Container>\n    \n    \n    \n    </>\n)\n}\n\nexport default AdminAllJobs;","/Users/mac/Downloads/UpClone/frontend/src/admin/AdminPanel.js",["135"],"import React, {useState, useEffect} from 'react';\nimport {Container, Nav, Col, Card} from 'react-bootstrap';\nimport { isAuthenticated, getUserDetail } from \"../auth/helper/index\";\n\nconst AdminPanel = () => {\n    const [ profile, setProfile ] = useState([]);\n\n    const { user } = isAuthenticated();\n\n    const preload = () => {\n        getUserDetail(user._id).then(data => {\n            if(data.error) {\n                console.log(data.error)\n            }else{\n                setProfile(data)\n            }\n        });\n    }\n    \n    useEffect(() => {\n        preload();  \n    }, []);\n\n    return(\n        <>\n        <Container>\n            <Nav variant=\"tabs\" defaultActiveKey=\"/adminportal\">\n                <Nav.Item>\n                    <Nav.Link href=\"/\">Home</Nav.Link>\n                </Nav.Item>\n                <Nav.Item>\n                    <Nav.Link href=\"/adminportal\" >Admin</Nav.Link>\n                </Nav.Item>\n                <Nav.Item>\n                    <Nav.Link href=\"/alljobs\">All Jobs</Nav.Link>\n                </Nav.Item>\n                <Nav.Item>\n                    <Nav.Link href=\"/allprofiles\">All Profiles</Nav.Link>\n                </Nav.Item>\n            </Nav>\n        </Container>\n        <Container>\n            <Col md={{ span: 10, offset: 1 }} style={{marginTop:\"20px\"}} >\n            <h3 style={{ fontWeight:\"900\", paddingBottom:\"10px\", textAlign:\"center\"}}>Welcome Admin</h3>\n            <Card border={'success'} className='text-center' >\n                <Card.Body>\n                    <Card.Header style={{marginBottom:\"20px\",}}>\n                    <h5><p className=\"text-success\">{profile.firstName} {profile.lastName}</p></h5>\n                    </Card.Header>\n                    <Card.Text>\n                    <b>Email:</b> <span className=\"text-success\">{profile.email}</span><br />\n                    </Card.Text>\n                </Card.Body>\n                <Card.Body>\n                </Card.Body>\n            </Card>\n            </Col>\n        </Container>\n        </>\n    )\n}\n\nexport default AdminPanel;\n\n","/Users/mac/Downloads/UpClone/frontend/src/admin/AdminAllProfiles.js",["136"],"import React, {useEffect, useState} from 'react';\nimport Menu from '../core/Menu';\nimport { getAllProfiles, deleteProfile } from '../auth/helper/profiles';\nimport { Link } from \"react-router-dom\";\nimport { Button, Container, Row, Col, Card, Nav } from 'react-bootstrap';\nimport { isAuthenticated } from \"../auth/helper/index\";\n\nconst AdminAllProfiles = () => {\n\nconst [ profiles, setProfiles ] = useState([]);\n\nconst { user } = isAuthenticated();\n\nconst preload = () => {\n    getAllProfiles().then(data => {\n        if(data.error) {\n            console.log(data.error)\n        }else{\n            setProfiles(data)\n        }\n    });\n}\n\nconst deleteThisProfile = (profileId) => {\n    deleteProfile(profileId).then(data => {\n        if (data.error) {\n          console.log(data.error);\n        } else {\n          preload();\n        }\n      });\n}\n\nuseEffect(() => {\n    preload();  \n}, []);\n\nreturn(\n    <>\n    <Container>\n        <Nav variant=\"tabs\" defaultActiveKey=\"/allprofiles\">\n            <Nav.Item>\n                <Nav.Link href=\"/\">Home</Nav.Link>\n            </Nav.Item>\n            <Nav.Item>\n                <Nav.Link href=\"/adminportal\">Admin</Nav.Link>\n            </Nav.Item>\n            <Nav.Item>\n                <Nav.Link href=\"/alljobs\">All Jobs</Nav.Link>\n            </Nav.Item>\n            <Nav.Item>\n                <Nav.Link href=\"/allprofiles\">All Profiles</Nav.Link>\n            </Nav.Item>\n        </Nav>\n    </Container>\n    <Container style={{fontSize:\"14px\", margin:\"auto\", marginTop:\"50px\", height:\"100vh\"}}>\n        <h3 style={{ fontWeight:\"900\", paddingBottom:\"10px\", textAlign:\"center\"}}>{profiles.length>0 ? `Hi ${user.email}, Here are all the profiles uploaded` : \"Sorry no Profile exist!\"}</h3>\n        \n        \n        {profiles.map((profile,index)=>{\n            return(\n                <Col md={{ span: 10, offset: 1 }} style={{marginTop:\"20px\"}} key={index}>\n                <Card border={'success'} >\n                    <Card.Body>\n                        <Card.Header style={{marginBottom:\"20px\",}}>\n                        <h5><p className=\"text-success\">{profile.title}</p></h5>\n                        </Card.Header>\n                        <Card.Text>\n                        <b>Description:</b> <span className=\"text-success\">{profile.description}</span><br />\n                        <b>Availability:</b> <span className=\"text-success\">{profile.availabilty} Hours/ Week</span> \n                        </Card.Text>\n                    </Card.Body>\n                    <Card.Body>\n                        <Row>\n                            <Col><b>Type of Payment:</b> <span className=\"text-success\">{profile.typeOfPayment}</span></Col>\n                            <Col><b>Price:</b> <span className=\"text-success\">{profile.price}</span> </Col>\n                            <Col><b>Qualification:</b> <p className=\"text-success\">{profile.qualification}</p></Col>\n                            <Col><b>Institution:</b> <p className=\"text-success\">{profile.institution}</p></Col>\n                            <Col>\n                            <Button variant=\"danger\" onClick={() => {deleteThisProfile(profile._id)}}>\n                                <Link \n                                style={{textDecoration:\"none\", color:\"white\"}} \n                                to=\"/allprofiles\">\n                                    Delete\n                                </Link>\n                            </Button>\n                            </Col>\n                        </Row>\n                    </Card.Body>\n                </Card>\n            </Col>\n        )})};\n    </Container>\n    </>\n)\n}\n\nexport default AdminAllProfiles;","/Users/mac/Downloads/UpClone/frontend/src/auth/helper/profiles.js",[],"/Users/mac/Downloads/UpClone/frontend/src/auth/helper/jobs.js",[],"/Users/mac/Downloads/UpClone/frontend/src/core/Menu.js",[],"/Users/mac/Downloads/UpClone/frontend/src/core/Footer.js",[],"/Users/mac/Downloads/UpClone/frontend/src/core/Companies.js",[],"/Users/mac/Downloads/UpClone/frontend/src/core/Content.js",[],"/Users/mac/Downloads/UpClone/frontend/src/auth/helper/index.js",["137"],"import { API } from \"../../backend\";\n\nexport const signup = (user) => {\n    return fetch(`${API}/signup`, {\n        method: \"POST\",\n        headers:{\n            Accept:\"application/json\",\n            \"Content-Type\":\"application/json\"\n        },\n        body:JSON.stringify(user)\n    })\n    .then((response) => {\n        return response.json();\n    })\n    .catch((err) => {console.log(err)});\n};\n\nexport const signin = (user) => {\n    return fetch(`${API}/signin`, {\n        method:\"POST\",\n        headers:{\n            Accept:\"application/json\",\n            \"Content-Type\":\"application/json\",\n            \n        },\n        body:JSON.stringify(user)\n    })\n    .then(response => {\n        return response.json();\n    })\n    .catch((err) => console.log(err));\n};\n\nexport const getUserDetail = (userId) => {\n    return fetch(`${API}/user/${userId}`, {\n        method:\"GET\",\n    })\n    .then(response => {\n        return response.json();\n    })\n    .catch((err) => console.log(err));\n};\n\n\nexport const authenticate = (data,next) => {\n    if (typeof window !== \"undefined\") {\n        localStorage.setItem(\"jwt\", JSON.stringify(data));\n        next();\n    }\n};\n\nexport const signout = next => {\n    if (typeof window !== \"undefined\") {\n      localStorage.removeItem(\"jwt\");\n\n  \n      return fetch(`${API}/signout`, {\n        method: \"GET\"\n      })\n        .then(response => console.log(\"signout success\"))\n        .catch(err => console.log(err));\n    }\n  };\n\nexport const isAuthenticated = () => {\n    if (typeof window == \"undefined\") {\n      return false;\n    }\n    if (localStorage.getItem(\"jwt\")) {\n      return JSON.parse(localStorage.getItem(\"jwt\"));\n    } else {\n      return false;\n    }\n};\n\n\nexport const updateRole = (userId, roleNum, token, next) => {\n  return fetch(`${API}/user/updaterole/${userId}`, {\n      method:\"PUT\",\n      headers:{\n          Accept:\"application/json\",\n          \"Content-Type\":\"application/json\",\n          Authorization: `Bearer ${token}`\n      },\n    body:JSON.stringify({role:roleNum})\n  })\n  .then(response => {\n      return response.json();\n  })\n  .catch((err) => console.log(err));\n  next();\n};\n  ","/Users/mac/Downloads/UpClone/frontend/src/backend.js",[],"/Users/mac/Downloads/UpClone/frontend/src/core/Testimonial.js",[],{"ruleId":"138","replacedBy":"139"},{"ruleId":"140","replacedBy":"141"},{"ruleId":"142","severity":1,"message":"143","line":6,"column":9,"nodeType":"144","endLine":6,"endColumn":32},{"ruleId":"145","severity":1,"message":"146","line":18,"column":37,"nodeType":"147","messageId":"148","endLine":18,"endColumn":44},{"ruleId":"149","severity":1,"message":"150","line":28,"column":17,"nodeType":"151","messageId":"152","endLine":28,"endColumn":19},{"ruleId":"149","severity":1,"message":"150","line":29,"column":16,"nodeType":"151","messageId":"152","endLine":29,"endColumn":18},{"ruleId":"149","severity":1,"message":"150","line":30,"column":13,"nodeType":"151","messageId":"152","endLine":30,"endColumn":15},{"ruleId":"149","severity":1,"message":"150","line":31,"column":16,"nodeType":"151","messageId":"152","endLine":31,"endColumn":18},{"ruleId":"149","severity":1,"message":"150","line":32,"column":12,"nodeType":"151","messageId":"152","endLine":32,"endColumn":14},{"ruleId":"153","severity":1,"message":"154","line":36,"column":4,"nodeType":"155","endLine":36,"endColumn":6,"suggestions":"156"},{"ruleId":"145","severity":1,"message":"157","line":12,"column":13,"nodeType":"147","messageId":"148","endLine":12,"endColumn":17},{"ruleId":"145","severity":1,"message":"157","line":11,"column":13,"nodeType":"147","messageId":"148","endLine":11,"endColumn":17},{"ruleId":"153","severity":1,"message":"158","line":109,"column":8,"nodeType":"155","endLine":109,"endColumn":10,"suggestions":"159"},{"ruleId":"145","severity":1,"message":"157","line":45,"column":12,"nodeType":"147","messageId":"148","endLine":45,"endColumn":16},{"ruleId":"153","severity":1,"message":"160","line":101,"column":8,"nodeType":"155","endLine":101,"endColumn":10,"suggestions":"161"},{"ruleId":"153","severity":1,"message":"154","line":27,"column":4,"nodeType":"155","endLine":27,"endColumn":6,"suggestions":"162"},{"ruleId":"145","severity":1,"message":"163","line":2,"column":8,"nodeType":"147","messageId":"148","endLine":2,"endColumn":12},{"ruleId":"145","severity":1,"message":"157","line":12,"column":9,"nodeType":"147","messageId":"148","endLine":12,"endColumn":13},{"ruleId":"153","severity":1,"message":"154","line":22,"column":8,"nodeType":"155","endLine":22,"endColumn":10,"suggestions":"164"},{"ruleId":"145","severity":1,"message":"163","line":2,"column":8,"nodeType":"147","messageId":"148","endLine":2,"endColumn":12},{"ruleId":"165","severity":1,"message":"166","line":91,"column":3,"nodeType":"167","messageId":"168","endLine":91,"endColumn":10},"no-native-reassign",["169"],"no-negated-in-lhs",["170"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-unused-vars","'loading' is assigned a value but never used.","Identifier","unusedVar","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'preload'. Either include it or remove the dependency array.","ArrayExpression",["171"],"'user' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'match.params.profileId' and 'preload'. Either include them or remove the dependency array.",["172"],"React Hook useEffect has missing dependencies: 'match.params.jobId' and 'preload'. Either include them or remove the dependency array.",["173"],["174"],"'Menu' is defined but never used.",["175"],"no-unreachable","Unreachable code.","ExpressionStatement","unreachableCode","no-global-assign","no-unsafe-negation",{"desc":"176","fix":"177"},{"desc":"178","fix":"179"},{"desc":"180","fix":"181"},{"desc":"176","fix":"182"},{"desc":"176","fix":"183"},"Update the dependencies array to be: [preload]",{"range":"184","text":"185"},"Update the dependencies array to be: [match.params.profileId, preload]",{"range":"186","text":"187"},"Update the dependencies array to be: [match.params.jobId, preload]",{"range":"188","text":"189"},{"range":"190","text":"185"},{"range":"191","text":"185"},[850,852],"[preload]",[3263,3265],"[match.params.profileId, preload]",[2917,2919],"[match.params.jobId, preload]",[680,682],[583,585]]